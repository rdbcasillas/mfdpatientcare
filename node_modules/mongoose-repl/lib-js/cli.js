// Generated by CoffeeScript 1.6.3
var mongo_uri, optimist, path, repl, req,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

path = require('path');

repl = require("" + __dirname + "/mongoose-repl");

optimist = require("optimist");

module.exports = {
  req: req = function(some_path) {
    if (some_path != null) {
      return require(path.resolve(some_path));
    }
  },
  mongo_uri: mongo_uri = function(host, db) {
    if (db && __indexOf.call(db, '/') >= 0) {
      if (host != null) {
        throw new Error("url can't have host if you specify it using the --host option");
      }
      return db;
    } else {
      return "" + (host != null ? host : 'localhost') + "/" + (db != null ? db : 'test');
    }
  },
  run: function() {
    var argv, _ref;
    argv = optimist.usage('mongoose [options] <mongo url>').options({
      schemas: {
        alias: 's',
        describe: 'Path to a module that exports schema definitions'
      },
      mongoose: {
        alias: 'm',
        describe: 'Path to the Mongoose library to require'
      },
      host: {
        alias: 'h',
        describe: 'Host to connect to'
      },
      version: {
        alias: 'v',
        describe: 'List version'
      }
    }).argv;
    if (argv.version) {
      return console.log(require("" + __dirname + "/../package.json").version);
    } else {
      return repl.run(req(argv.schemas) || {}, req(argv.mongoose) || require('mongoose'), mongo_uri(argv.host, (_ref = argv._) != null ? _ref[0] : void 0));
    }
  }
};
